/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

&mt { flavor = "balanced"; };

/ {
    combos {
        compatible = "zmk,combos";

        to_qwerty {
            bindings = <&to 1>;
            key-positions = <0 11>;
            layers = <0>;
        };

        to_colemak_dh {
            bindings = <&to 0>;
            key-positions = <0 11>;
            layers = <1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        colemak_dh {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp TAB           &kp Q  &kp W  &kp F     &kp P        &kp B        &kp J        &kp L            &kp U      &kp Y    &kp SQT   &kp LBKT
&kp LEFT_SHIFT    &kp A  &kp R  &kp S     &kp T        &kp G        &kp M        &kp N            &kp E      &kp I    &kp O     &kp SEMI
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C     &kp D        &kp V        &kp K        &kp H            &kp COMMA  &kp DOT  &kp FSLH  &kp RBKT
                                &kp LGUI  &lt 2 SPACE  &lt 4 TAB    &lt 5 ENTER  &lt 3 BACKSPACE  &kp RALT
            >;
        };

        QWERTY {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E         &kp R        &kp T        &kp Y        &kp U            &kp I          &kp O    &kp P     &kp LBKT
&kp LSHFT  &kp A  &kp S  &kp D         &kp F        &kp G        &kp H        &kp J            &kp K          &kp L    &kp SEMI  &kp SQT
&kp LCTRL  &kp Z  &kp X  &kp C         &kp V        &kp B        &kp N        &kp M            &kp COMMA      &kp DOT  &kp FSLH  &kp RBKT
                         &kp LEFT_GUI  &lt 2 SPACE  &lt 4 TAB    &lt 5 ENTER  &lt 3 BACKSPACE  &kp RIGHT_ALT
            >;
        };

        NAV {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "nav";
            bindings = <
&kp ESCAPE  &kp C_MUTE     &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT      &kp C_VOLUME_UP      &kp PAGE_UP    &kp LS(LC(TAB))       &kp UP_ARROW  &kp LC(TAB)            &kp HOME  &kp DELETE
&trans      &kp LEFT_GUI   &kp LEFT_ALT    &kp LEFT_CONTROL  &kp LEFT_SHIFT  &kp C_VOLUME_DOWN    &kp PAGE_DOWN  &kp DOWN              &kp UP        &kp RIGHT              &kp END   &kp LG(LS(NUMBER_8))
&trans      &kp LG(LS(Z))  &kp LG(Z)       &kp LG(X)         &kp LG(C)       &kp LG(V)            &none          &kp LG(LEFT_BRACKET)  &none         &kp LG(RIGHT_BRACKET)  &none     &none
                                           &trans            &trans          &trans               &trans         &trans                &trans
            >;
        };

        SYM {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "sym";
            bindings = <
&trans  &kp SLASH        &kp BACKSLASH  &kp ASTERISK      &kp UNDERSCORE  &kp PRCNT        &kp AT_SIGN  &kp COLON      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp SINGLE_QUOTE   &none
&trans  &kp PIPE         &kp MINUS      &kp PLUS          &kp EQUAL       &kp CARET        &kp HASH     &kp SEMICOLON  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp DOUBLE_QUOTES  &none
&trans  &kp EXCLAMATION  &kp LESS_THAN  &kp GREATER_THAN  &kp TILDE       &kp AMPERSAND    &kp DOLLAR   &kp GRAVE      &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp QUESTION       &none
                                        &trans            &trans          &trans           &trans       &trans         &trans
            >;
        };

        NUM {
            bindings = <
&trans  &kp LA(LC(U))  &kp LA(LC(D))           &kp LA(LC(F))  &kp LA(LC(G))            &kp LA(LC(I))    &none   &kp N7  &kp N8  &kp N9  &none  &none
&trans  &kp LGUI       &kp LALT                &kp LCTRL      &kp LSHFT                &none            &none   &kp N4  &kp N5  &kp N6  &none  &none
&trans  &kp LA(LC(J))  &kp LA(LC(LEFT_ARROW))  &kp LC(LG(F))  &kp LA(LC(RIGHT_ARROW))  &kp LA(LC(K))    &kp N0  &kp N1  &kp N2  &kp N3  &none  &none
                                               &trans         &trans                   &trans           &trans  &trans  &trans
            >;
        };

        SYS {
            bindings = <
&trans  &kp F12  &kp F7  &kp F8  &kp F9  &none     &none              &none         &none         &none         &none         &none
&trans  &kp F11  &kp F4  &kp F5  &kp F6  &none     &ext_power EP_TOG  &kp RSHFT     &kp RCTRL     &kp RALT      &kp RGUI      &none
&trans  &kp F10  &kp F1  &kp F2  &kp F3  &none     &bt BT_SEL 0       &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR_ALL
                         &trans  &trans  &trans    &trans             &trans        &trans
            >;
        };

        extra_1 { status = "reserved"; };

        extra_2 { status = "reserved"; };

        extra_3 { status = "reserved"; };
    };
};
